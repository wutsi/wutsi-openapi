openapi: "3.0.0"
info:
  title: "Wutsi Order API"
  description: API for managing orders
  version: "1.0.0"

servers:
  - url: https://wutsi-order-server-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-order-server-prod.herokuapp.com
    description: Production

paths:
  /v1/orders:
    post:
      operationId: "create-order"
      description: Create an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
        403:
          description: The caller is not authorized to call this endpoint
        409:
          description: Error
      tags:
        - Order
      security:
        - api_key: [ 'order-manage' ]

  /v1/orders/{id}:
    post:
      operationId: "get-order"
      description: Get an order
      parameters:
        - in: path
          name: id
          description: ID of the category
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
        403:
          description: The caller is not authorized to call this endpoint
        409:
          description: Error
      tags:
        - Order
      security:
        - api_key: [ 'order-manage' ]

components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    CreateOrderRequest:
      type: object
      properties:
        merchantId:
          type: integer
          format: int64
          description: ID of the merchant
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
          description: Items of order
      required:
        - items

    CreateOrderResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the order created

    OrderItem:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
          description: ID of offer associated with the item
        itemType:
          type: string
          enum:
            - PRODUCT
          description: Type of offer
        quantity:
          type: integer
          description: Number of offers
        unitPrice:
          type: number
          format: decimal
          description: Unit price
          minimum: 1
        currency:
          type: string
          description: currency
      required:
        - title
        - currency

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the order
        merchantId:
          type: integer
          format: int64
          description: ID of the merchant
        accountId:
          type: integer
          format: int64
          description: ID of the customer
        status:
          type: string
          description: Description of teh order
        totalPrice:
          type: number
          format: double
          description: Total amount of the offer. This is the amount that will be charged to the customer
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
          description: Offers in the product

    GetOrderResponse:
      type: object
      properties:
        id:
          type: object
          $ref: "#/components/schemas/Order"
